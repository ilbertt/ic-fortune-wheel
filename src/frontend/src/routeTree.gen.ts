/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as unauthenticatedLoginImport } from './routes/(unauthenticated)/login'
import { Route as unauthenticatedFwImport } from './routes/(unauthenticated)/fw'
import { Route as authenticatedAdminImport } from './routes/(authenticated)/admin'
import { Route as authenticatedAdminIndexImport } from './routes/(authenticated)/admin/index'
import { Route as authenticatedAdminUnassignedImport } from './routes/(authenticated)/admin/unassigned'
import { Route as authenticatedAdminTeamImport } from './routes/(authenticated)/admin/team'
import { Route as authenticatedAdminScannerImport } from './routes/(authenticated)/admin/scanner'
import { Route as authenticatedAdminDesignImport } from './routes/(authenticated)/admin/design'
import { Route as authenticatedAdminAssetsImport } from './routes/(authenticated)/admin/assets'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const unauthenticatedLoginRoute = unauthenticatedLoginImport.update({
  id: '/(unauthenticated)/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const unauthenticatedFwRoute = unauthenticatedFwImport.update({
  id: '/(unauthenticated)/fw',
  path: '/fw',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedAdminRoute = authenticatedAdminImport.update({
  id: '/(authenticated)/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedAdminIndexRoute = authenticatedAdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => authenticatedAdminRoute,
} as any)

const authenticatedAdminUnassignedRoute =
  authenticatedAdminUnassignedImport.update({
    id: '/unassigned',
    path: '/unassigned',
    getParentRoute: () => authenticatedAdminRoute,
  } as any)

const authenticatedAdminTeamRoute = authenticatedAdminTeamImport.update({
  id: '/team',
  path: '/team',
  getParentRoute: () => authenticatedAdminRoute,
} as any)

const authenticatedAdminScannerRoute = authenticatedAdminScannerImport.update({
  id: '/scanner',
  path: '/scanner',
  getParentRoute: () => authenticatedAdminRoute,
} as any)

const authenticatedAdminDesignRoute = authenticatedAdminDesignImport.update({
  id: '/design',
  path: '/design',
  getParentRoute: () => authenticatedAdminRoute,
} as any)

const authenticatedAdminAssetsRoute = authenticatedAdminAssetsImport.update({
  id: '/assets',
  path: '/assets',
  getParentRoute: () => authenticatedAdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/admin': {
      id: '/(authenticated)/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof authenticatedAdminImport
      parentRoute: typeof rootRoute
    }
    '/(unauthenticated)/fw': {
      id: '/(unauthenticated)/fw'
      path: '/fw'
      fullPath: '/fw'
      preLoaderRoute: typeof unauthenticatedFwImport
      parentRoute: typeof rootRoute
    }
    '/(unauthenticated)/login': {
      id: '/(unauthenticated)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof unauthenticatedLoginImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/admin/assets': {
      id: '/(authenticated)/admin/assets'
      path: '/assets'
      fullPath: '/admin/assets'
      preLoaderRoute: typeof authenticatedAdminAssetsImport
      parentRoute: typeof authenticatedAdminImport
    }
    '/(authenticated)/admin/design': {
      id: '/(authenticated)/admin/design'
      path: '/design'
      fullPath: '/admin/design'
      preLoaderRoute: typeof authenticatedAdminDesignImport
      parentRoute: typeof authenticatedAdminImport
    }
    '/(authenticated)/admin/scanner': {
      id: '/(authenticated)/admin/scanner'
      path: '/scanner'
      fullPath: '/admin/scanner'
      preLoaderRoute: typeof authenticatedAdminScannerImport
      parentRoute: typeof authenticatedAdminImport
    }
    '/(authenticated)/admin/team': {
      id: '/(authenticated)/admin/team'
      path: '/team'
      fullPath: '/admin/team'
      preLoaderRoute: typeof authenticatedAdminTeamImport
      parentRoute: typeof authenticatedAdminImport
    }
    '/(authenticated)/admin/unassigned': {
      id: '/(authenticated)/admin/unassigned'
      path: '/unassigned'
      fullPath: '/admin/unassigned'
      preLoaderRoute: typeof authenticatedAdminUnassignedImport
      parentRoute: typeof authenticatedAdminImport
    }
    '/(authenticated)/admin/': {
      id: '/(authenticated)/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof authenticatedAdminIndexImport
      parentRoute: typeof authenticatedAdminImport
    }
  }
}

// Create and export the route tree

interface authenticatedAdminRouteChildren {
  authenticatedAdminAssetsRoute: typeof authenticatedAdminAssetsRoute
  authenticatedAdminDesignRoute: typeof authenticatedAdminDesignRoute
  authenticatedAdminScannerRoute: typeof authenticatedAdminScannerRoute
  authenticatedAdminTeamRoute: typeof authenticatedAdminTeamRoute
  authenticatedAdminUnassignedRoute: typeof authenticatedAdminUnassignedRoute
  authenticatedAdminIndexRoute: typeof authenticatedAdminIndexRoute
}

const authenticatedAdminRouteChildren: authenticatedAdminRouteChildren = {
  authenticatedAdminAssetsRoute: authenticatedAdminAssetsRoute,
  authenticatedAdminDesignRoute: authenticatedAdminDesignRoute,
  authenticatedAdminScannerRoute: authenticatedAdminScannerRoute,
  authenticatedAdminTeamRoute: authenticatedAdminTeamRoute,
  authenticatedAdminUnassignedRoute: authenticatedAdminUnassignedRoute,
  authenticatedAdminIndexRoute: authenticatedAdminIndexRoute,
}

const authenticatedAdminRouteWithChildren =
  authenticatedAdminRoute._addFileChildren(authenticatedAdminRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof authenticatedAdminRouteWithChildren
  '/fw': typeof unauthenticatedFwRoute
  '/login': typeof unauthenticatedLoginRoute
  '/admin/assets': typeof authenticatedAdminAssetsRoute
  '/admin/design': typeof authenticatedAdminDesignRoute
  '/admin/scanner': typeof authenticatedAdminScannerRoute
  '/admin/team': typeof authenticatedAdminTeamRoute
  '/admin/unassigned': typeof authenticatedAdminUnassignedRoute
  '/admin/': typeof authenticatedAdminIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fw': typeof unauthenticatedFwRoute
  '/login': typeof unauthenticatedLoginRoute
  '/admin/assets': typeof authenticatedAdminAssetsRoute
  '/admin/design': typeof authenticatedAdminDesignRoute
  '/admin/scanner': typeof authenticatedAdminScannerRoute
  '/admin/team': typeof authenticatedAdminTeamRoute
  '/admin/unassigned': typeof authenticatedAdminUnassignedRoute
  '/admin': typeof authenticatedAdminIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(authenticated)/admin': typeof authenticatedAdminRouteWithChildren
  '/(unauthenticated)/fw': typeof unauthenticatedFwRoute
  '/(unauthenticated)/login': typeof unauthenticatedLoginRoute
  '/(authenticated)/admin/assets': typeof authenticatedAdminAssetsRoute
  '/(authenticated)/admin/design': typeof authenticatedAdminDesignRoute
  '/(authenticated)/admin/scanner': typeof authenticatedAdminScannerRoute
  '/(authenticated)/admin/team': typeof authenticatedAdminTeamRoute
  '/(authenticated)/admin/unassigned': typeof authenticatedAdminUnassignedRoute
  '/(authenticated)/admin/': typeof authenticatedAdminIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/fw'
    | '/login'
    | '/admin/assets'
    | '/admin/design'
    | '/admin/scanner'
    | '/admin/team'
    | '/admin/unassigned'
    | '/admin/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/fw'
    | '/login'
    | '/admin/assets'
    | '/admin/design'
    | '/admin/scanner'
    | '/admin/team'
    | '/admin/unassigned'
    | '/admin'
  id:
    | '__root__'
    | '/'
    | '/(authenticated)/admin'
    | '/(unauthenticated)/fw'
    | '/(unauthenticated)/login'
    | '/(authenticated)/admin/assets'
    | '/(authenticated)/admin/design'
    | '/(authenticated)/admin/scanner'
    | '/(authenticated)/admin/team'
    | '/(authenticated)/admin/unassigned'
    | '/(authenticated)/admin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticatedAdminRoute: typeof authenticatedAdminRouteWithChildren
  unauthenticatedFwRoute: typeof unauthenticatedFwRoute
  unauthenticatedLoginRoute: typeof unauthenticatedLoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticatedAdminRoute: authenticatedAdminRouteWithChildren,
  unauthenticatedFwRoute: unauthenticatedFwRoute,
  unauthenticatedLoginRoute: unauthenticatedLoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(authenticated)/admin",
        "/(unauthenticated)/fw",
        "/(unauthenticated)/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(authenticated)/admin": {
      "filePath": "(authenticated)/admin.tsx",
      "children": [
        "/(authenticated)/admin/assets",
        "/(authenticated)/admin/design",
        "/(authenticated)/admin/scanner",
        "/(authenticated)/admin/team",
        "/(authenticated)/admin/unassigned",
        "/(authenticated)/admin/"
      ]
    },
    "/(unauthenticated)/fw": {
      "filePath": "(unauthenticated)/fw.tsx"
    },
    "/(unauthenticated)/login": {
      "filePath": "(unauthenticated)/login.tsx"
    },
    "/(authenticated)/admin/assets": {
      "filePath": "(authenticated)/admin/assets.tsx",
      "parent": "/(authenticated)/admin"
    },
    "/(authenticated)/admin/design": {
      "filePath": "(authenticated)/admin/design.tsx",
      "parent": "/(authenticated)/admin"
    },
    "/(authenticated)/admin/scanner": {
      "filePath": "(authenticated)/admin/scanner.tsx",
      "parent": "/(authenticated)/admin"
    },
    "/(authenticated)/admin/team": {
      "filePath": "(authenticated)/admin/team.tsx",
      "parent": "/(authenticated)/admin"
    },
    "/(authenticated)/admin/unassigned": {
      "filePath": "(authenticated)/admin/unassigned.tsx",
      "parent": "/(authenticated)/admin"
    },
    "/(authenticated)/admin/": {
      "filePath": "(authenticated)/admin/index.tsx",
      "parent": "/(authenticated)/admin"
    }
  }
}
ROUTE_MANIFEST_END */
