/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as unauthenticatedFwImport } from './routes/(unauthenticated)/fw'
import { Route as unauthenticatedLoginIndexImport } from './routes/(unauthenticated)/login/index'
import { Route as unauthenticatedFwIndexImport } from './routes/(unauthenticated)/fw/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const unauthenticatedFwRoute = unauthenticatedFwImport.update({
  id: '/(unauthenticated)/fw',
  path: '/fw',
  getParentRoute: () => rootRoute,
} as any)

const unauthenticatedLoginIndexRoute = unauthenticatedLoginIndexImport.update({
  id: '/(unauthenticated)/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const unauthenticatedFwIndexRoute = unauthenticatedFwIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => unauthenticatedFwRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(unauthenticated)/fw': {
      id: '/(unauthenticated)/fw'
      path: '/fw'
      fullPath: '/fw'
      preLoaderRoute: typeof unauthenticatedFwImport
      parentRoute: typeof rootRoute
    }
    '/(unauthenticated)/fw/': {
      id: '/(unauthenticated)/fw/'
      path: '/'
      fullPath: '/fw/'
      preLoaderRoute: typeof unauthenticatedFwIndexImport
      parentRoute: typeof unauthenticatedFwImport
    }
    '/(unauthenticated)/login/': {
      id: '/(unauthenticated)/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof unauthenticatedLoginIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

interface unauthenticatedFwRouteChildren {
  unauthenticatedFwIndexRoute: typeof unauthenticatedFwIndexRoute
}

const unauthenticatedFwRouteChildren: unauthenticatedFwRouteChildren = {
  unauthenticatedFwIndexRoute: unauthenticatedFwIndexRoute,
}

const unauthenticatedFwRouteWithChildren =
  unauthenticatedFwRoute._addFileChildren(unauthenticatedFwRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/fw': typeof unauthenticatedFwRouteWithChildren
  '/fw/': typeof unauthenticatedFwIndexRoute
  '/login': typeof unauthenticatedLoginIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/fw': typeof unauthenticatedFwIndexRoute
  '/login': typeof unauthenticatedLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(unauthenticated)/fw': typeof unauthenticatedFwRouteWithChildren
  '/(unauthenticated)/fw/': typeof unauthenticatedFwIndexRoute
  '/(unauthenticated)/login/': typeof unauthenticatedLoginIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/fw' | '/fw/' | '/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/fw' | '/login'
  id:
    | '__root__'
    | '/'
    | '/(unauthenticated)/fw'
    | '/(unauthenticated)/fw/'
    | '/(unauthenticated)/login/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  unauthenticatedFwRoute: typeof unauthenticatedFwRouteWithChildren
  unauthenticatedLoginIndexRoute: typeof unauthenticatedLoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  unauthenticatedFwRoute: unauthenticatedFwRouteWithChildren,
  unauthenticatedLoginIndexRoute: unauthenticatedLoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(unauthenticated)/fw",
        "/(unauthenticated)/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(unauthenticated)/fw": {
      "filePath": "(unauthenticated)/fw.tsx",
      "children": [
        "/(unauthenticated)/fw/"
      ]
    },
    "/(unauthenticated)/fw/": {
      "filePath": "(unauthenticated)/fw/index.tsx",
      "parent": "/(unauthenticated)/fw"
    },
    "/(unauthenticated)/login/": {
      "filePath": "(unauthenticated)/login/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
